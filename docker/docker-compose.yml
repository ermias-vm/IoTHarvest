services:
  nginx:
    image: iotharvest-nginx:latest
    build:
      context: ..
      dockerfile: docker/Dockerfile.nginx
    container_name: iotharvest-nginx
    ports:
      - "80:80"      # Puerto HTTP expuesto al exterior
      # - "443:443"  # Puerto HTTPS (descomenta si usas SSL)
    depends_on:
      - frontend
      - backend
    restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      # - ./ssl:/etc/nginx/ssl:ro  # Descomenta si usas SSL
      - nginx_logs:/var/log/nginx

  backend:
    image: iotharvest-backend:latest
    build:
      context: ..
      dockerfile: docker/Dockerfile.backend
    container_name: iotharvest-backend
    # Ya no exponemos puertos al exterior directamente
    # ports:
    #   - "8080:8080"
    expose:
      - "8080"  # Solo expuesto internamente a otros contenedores
    volumes:
      - ../backend/data:/app/backend/data
    env_file:
      - ./.env
    environment:
      - MONGODB_URL=${MONGODB_URL}
      - JWT_SECRET=${JWT_SECRET}
      - ADMIN_SCRIPT_PASS=${ADMIN_SCRIPT_PASS}
      - MAIL_FROM=${MAIL_FROM}
      - MAIL_PASS=${MAIL_PASS}
      - MAIL_HOST=${MAIL_HOST}
      - MAIL_PORT=${MAIL_PORT}
      - CLOUDINARY_CLOUD_NAME=${CLOUDINARY_CLOUD_NAME}
      - CLOUDINARY_API_KEY=${CLOUDINARY_API_KEY}
      - CLOUDINARY_API_SECRET=${CLOUDINARY_API_SECRET}

  frontend:
    image: iotharvest-frontend:latest
    build:
      context: ..
      dockerfile: docker/Dockerfile.frontend
    container_name: iotharvest-frontend
    # Ya no exponemos puertos al exterior directamente
    # ports:
    #   - "8081:8081"
    expose:
      - "8081"  # Solo expuesto internamente a otros contenedores
    depends_on:
      - backend

  model:
    image: iotharvest-model:latest
    build:
      context: ..
      dockerfile: docker/Dockerfile.model
    container_name: iotharvest-model
    volumes:
      - ../backend/data:/app/backend/data
    restart: unless-stopped
    depends_on:
      - backend

volumes:
  nginx_logs:
